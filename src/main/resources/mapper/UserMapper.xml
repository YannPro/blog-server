<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yannyao.blog.mapper.UserMapper">
    <resultMap id="UserMap" type="com.yannyao.blog.bean.User">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="nickname" property="nickname"/>
        <result column="email" property="email"/>
        <result column="avatar_image" property="avatarImage"/>
        <result column="status" property="status"/>
        <result column="ip" property="ip"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <select id="getList"  resultMap="UserMap">
        SELECT * FROM `user` u
    </select>
    <select id="getById"  resultMap="UserMap">
        SELECT * FROM `user` u WHERE `id` = #{_parameter}
    </select>
    <select id="getByEmailAndPwd" resultMap="UserMap">
        select u.`id`,u.`email`,u.`nickname` from `user` u
        <where>
            <if test="email != null">
                and u.`email` = #{email}
            </if>
            <if test="password != null">
                and u.`password`=#{password}
            </if>
        </where>
    </select>
    <select id="getSearchList" resultMap="UserMap">
        SELECT u.*,g.`user_group_info` FROM `user` u
        LEFT JOIN `group` g ON g.`user_group_id` =  u.`group`
        <where>
            <if test="groupValue != null">
                AND u.`group` = #{groupValue}
            </if>
            <if test="searchName != null">
                AND ${searchName} LIKE #{search}
            </if>
        </where>
        ORDER BY ${sort} LIMIT #{offset},#{limit}
    </select>
    <select id="getSearchAmount">
        SELECT COUNT(*) FROM `user` u
        LEFT JOIN `group` g ON g.`user_group_id` =  u.`group`
        <where>
            <if test="groupValue != null">
                AND u.`group` = #{groupValue}
            </if>
            <if test="searchName != null and search != null">
                AND ${searchName} LIKE #{search}
            </if>
        </where>
        ORDER BY ${sort} LIMIT #{offset},#{limit}
    </select>
    <insert id="insert" parameterType="com.yannyao.blog.bean.User">
        INSERT INTO `user` (`username`,`password`,`nickname`,`points`,`group`,`user_state`,`email`)
        SELECT #{username},#{password},#{nickname},#{points},#{group},#{userState},#{email} FROM DUAL
        WHERE NOT EXISTS(SELECT 1 FROM(SELECT 1 FROM `user` WHERE `username`=#{username})a)
    </insert>
    <update id="update" parameterType="com.yannyao.blog.bean.User">
        UPDATE `user`
        <set>
            <if test="username != null">
                `username` = #{username},
            </if>
            <if test="password != null">
                `password`=#{password},
            </if>
            <if test="nickname != null">
                `nickname` = #{nickname},
            </if>
            <if test="group != null">
                `group` = #{group},
            </if>
            <if test="points != null">
                `points`= #{points},
            </if>
            <if test="userState != null">
                `user_state` = #{userState},
            </if>
            <if test="email != null">
                `email` = #{email}
            </if>
        </set>
        where user_id=#{userId}
        <if test="username != null">
            and not exists(select 1 from(select 1 from `user` where `username`=#{username})a)
        </if>
    </update>

    <delete id="delete">
        DELETE FROM `user`
        WHERE `user_id`=#{_parameter}
    </delete>

</mapper>